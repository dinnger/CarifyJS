---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
import ApiDocContent from "../components/ApiDocContent.vue";
import { listFiles, type IListFiles } from "../server/files";
import { getCollection } from "astro:content";
import { render } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<Layout>
  <ApiDocContent>
    <Content />
  </ApiDocContent>
</Layout>

<script>
  /**
   * @params {HTMLCollectionOf<HTMLElement>} graphs
   */
  async function renderDiagrams(graphs: any) {
    const { default: mermaid } = await import("mermaid");
    mermaid.initialize({
      startOnLoad: false,
      fontFamily: "var(--sans-font)",
      // @ts-ignore This works, but TS expects a enum for some reason
      theme: window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "default",
    });

    for (const graph of graphs) {
      const content = graph.getAttribute("data-content");
      if (!content) continue;
      let svg = document.createElement("svg");
      const id = (svg.id = "mermaid-" + Math.round(Math.random() * 100000));
      graph.appendChild(svg);
      mermaid.render(id, content).then((result) => {
        graph.innerHTML = result.svg;
      });
    }
  }

  const graphs = document.getElementsByClassName("mermaid");
  if (document.getElementsByClassName("mermaid").length > 0) {
    renderDiagrams(graphs);
  }
</script>
